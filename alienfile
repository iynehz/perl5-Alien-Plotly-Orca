use alienfile;

# Download from Anaconda repo instead as plotly-orca's github releases page.
# This is because latter's Windows and OSX downloads still needs installation.
my $plotly_orca_version          = '1.2.1';
my $plotly_orca_version_anaconda = '1.2.1-1';

my $base_url =
  "https://anaconda.org/plotly/plotly-orca/$plotly_orca_version/download";
my $make_url = sub {
    join( '/',
        $base_url, $_[0],
        "plotly-orca-${plotly_orca_version_anaconda}.tar.bz2" );
};
my %download_url = (
    MSWin32 => $make_url->('win-64'),
    darwin  => $make_url->('osx-64'),
    linux   => $make_url->('linux-64'),
);

die 'Unsupported OS' unless grep { $^O eq $_ } (keys %download_url);

configure {
    'Path::Tiny' => 0,
    'File::Copy::Recursive' => 0,
};

plugin 'Probe::CommandLine' => (
    command => 'orca',
    args    => ['-h'],
    match   => qr/plotly/i,
);

share {

    start_url $download_url{$^O};
    plugin 'Download';
    plugin 'Extract' => 'tar.bz2';

    patch sub {
        my ($build) = @_;

        require Path::Tiny;
        Path::Tiny->import;

        my $extract = $build->install_prop->{extract};

        # Patch orca.cmd as Anaconda's orca.cmd uses Anaconda's path.
        if ( $^O eq 'MSWin32' ) { 

            # on Windows also adjust the directory structure.
            path($extract, 'orca.cmd')->remove;
            path($extract, 'bin', 'orca.cmd' )->spew(<<'END_OF_TEXT');
@echo off
%~dp0\..\orca_app\orca.exe %*
END_OF_TEXT
        } else {
            path($extract, 'bin', 'orca' )->spew(<<'END_OF_TEXT');
#!/bin/bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

if [[ "$OSTYPE" == "darwin"* ]]; then
    # Mac OSX
    exec ${DIR}/../lib/orca.app/Contents/MacOS/orca "$@"
else
    # Assume linux
    exec ${DIR}/../lib/orca_app/orca "$@"
fi
END_OF_TEXT
        }
    };

    build [
        'cp -r * %{.install.prefix}',
    ];

    gather [ [ 'orca', '--version', \'%{.runtime.version}' ], ];

};

